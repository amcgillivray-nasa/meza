#!/bin/sh

echo "Starting rebuilding search indexes as $(whoami)"

if [ -z "$1" ]; then
	do_wikis="*/"
else
	do_wikis="$1"
fi

wiki_dir="/opt/htdocs/wikis"

cd "$wiki_dir"

#
# FIRST wiki loop: disable indexing and use basic search
#
# Before processing any wikis, stop search indexing on all. We're gonna nuke the whole index, across
# all wikis before starting indexing, and we don't want any wikis to try to index anything until
# their proper index is recreated.
for d in $do_wikis; do

	if [ -z "$1" ]; then
		wiki_id=${d%/}
	else
		wiki_id="$d"
	fi

	if [ ! -d "$wiki_dir/$wiki_id" ]; then
		echo "\"$wiki_id\" not a valid wiki ID"
		continue
	fi

	# Disable search indexing in wiki-specific settings, and tell the
	# wiki to not use CirrusSearch for now by nullifying $wgSearchType.
	echo -e "<?php\n\$wgDisableSearchUpdate = true;" > "/opt/.deploy-meza/public/wikis/$wiki_id/postLocalSettings.d/disable-search-update.php"
	echo -e "<?php\n\$wgSearchType = null;"          > "/opt/.deploy-meza/public/wikis/$wiki_id/postLocalSettings.d/use-basic-search.php"

done

echo "Restarting apache and PHP to pick up disable-search-update.php changes"

# Restart PHP/Apache to ensure ^ change is picked up
sudo systemctl restart httpd
sudo systemctl restart php-fpm

# Print elasticsearch indexes
echo "List all pre-existing elasticsearch indexes"
curl -X GET 'http://localhost:9200/_cat/indices?v'

# Nuke all the indexes
echo "Deleting all Elasticsearch indexes"
curl -X DELETE 'http://localhost:9200/_all'

# Print again (should be empty)
echo "Printing indexes again. Should be empty."
curl -X GET 'http://localhost:9200/_cat/indices?v'

# Create metastore index (used by all wikis)
echo "Create wiki metastore"
WIKI="$wiki_id" php "/opt/htdocs/mediawiki/extensions/CirrusSearch/maintenance/Metastore.php" --upgrade

#
# SECOND wiki loop: nuke jobs, create indexes, reenable
#
for d in $do_wikis; do

	if [ -z "$1" ]; then
		wiki_id=${d%/}
	else
		wiki_id="$d"
	fi

	if [ ! -d "$wiki_dir/$wiki_id" ]; then
		echo "\"$wiki_id\" not a valid wiki ID"
		continue
	fi

	echo
	echo "Running UpdateSearchIndexConfig.php for ${wiki_id}"
	echo

	# Remove any broken cirrus update jobs
	mysql "wiki_$wiki_id" -e "DELETE FROM job WHERE job_cmd = 'cirrusSearchElasticaWrite'"

	# Run script to generate elasticsearch index
	cd "/opt/htdocs/mediawiki"
	WIKI="$wiki_id" php "/opt/htdocs/mediawiki/extensions/CirrusSearch/maintenance/UpdateSearchIndexConfig.php" --startOver

	# Remove search-update disable in wiki-specific settings
	rm -f "/opt/.deploy-meza/public/wikis/$wiki_id/postLocalSettings.d/disable-search-update.php"

done

# Restart PHP/Apache to ensure ^ change is picked up
sudo systemctl restart httpd
sudo systemctl restart php-fpm

# need to go back here since the prior loop cd'd into other directories
cd "$wiki_dir"

#
# THIRD wiki loop: Setup the search indexing
#
# I don't think this actually does the indexing per-se. I think that's actually handled by the job
# queue after this sets up all the jobs.
for d in $do_wikis; do

	if [ -z "$1" ]; then
		wiki_id=${d%/}
	else
		wiki_id="$d"
	fi

	if [ ! -d "$wiki_dir/$wiki_id" ]; then
		echo "\"$wiki_id\" not a valid wiki ID"
		continue
	fi

	echo
	echo "Running ForceSearchIndex.php for ${wiki_id}"
	echo

	# Bootstrap the search index
	#
	# Note that this can take some time
	# For large wikis read "Bootstrapping large wikis" in:
	# https://git.wikimedia.org/blob/mediawiki%2Fextensions%2FCirrusSearch.git/REL1_25/README
	WIKI="$wiki_id" php "/opt/htdocs/mediawiki/extensions/CirrusSearch/maintenance/ForceSearchIndex.php" --skipLinks --indexOnSkip
	WIKI="$wiki_id" php "/opt/htdocs/mediawiki/extensions/CirrusSearch/maintenance/ForceSearchIndex.php" --skipParse

	rm -f "/opt/.deploy-meza/public/wikis/$wiki_id/postLocalSettings.d/use-basic-search.php"

	# Restart PHP/Apache to ensure ^ change is picked up
	sudo systemctl restart httpd
	sudo systemctl restart php-fpm
	# Do ^ for each wiki, since the indexing will take a while

done
